package com.funcational_programming;
import java.util.*;
//
public class Main {

	public static void main(String[] args) {
		List<Employee> employees=new ArrayList<Employee>();
		
		employees.add(new Employee(121, "ravi",78000));
		employees.add(new Employee(1, "suman",38000));
		employees.add(new Employee(21, "rajiv",178000));
		employees.add(new Employee(9121, "gunika",898000));
		employees.add(new Employee(11, "ekta",898050));
		employees.add(new Employee(921, "sumit",98000));
		
		for(Employee employee: employees) {
			System.out.println(employee);
		}
		//what i want to get name of all emp whose salary is >=50000 in sorted order
		//java 7 ways
		
		//1...get all emp getting salary more then 50k
		List<Employee> empSalaryMoreThen50k= new ArrayList<Employee>();
		for(Employee employee: employees) {
			if(employee.getSalary()>=50000) {
				empSalaryMoreThen50k.add(employee);
			}
		}
		//2...sort all emp as per salary , desc order
		Collections.sort(empSalaryMoreThen50k, new Comparator<Employee>() {
			@Override
			public int compare(Employee o1, Employee o2) {
				return Double.compare(o2.getSalary(), o1.getSalary());//i want to reverse sort?
			}
		});
		
		//3. i want only names
		List<String> empNamesSalaryMoreThen50k=new ArrayList<String>();
		for(Employee emp: empSalaryMoreThen50k) {
			empNamesSalaryMoreThen50k.add(emp.getName());
			
		}
		
		//4. print them 
		
		for(String name: empNamesSalaryMoreThen50k) {
			System.out.println(name);
		}
		
		
		//fiter map sorting  ...very easy...
		
		// java 8 ways. (must be more easier and look :)
	}
}




